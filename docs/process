Ruby 2.6.5
Ruby on Rails 5.2.5

自分のタスクを登録したい
タスクに終了期限を設定できるようにしたい
タスクに優先順位をつけたい =>プルダウン:faculty
タスクのステータス（未着手・着手・完了）を管理したい
ステータスでタスクを絞り込みたい =>params[:sort]
タスク名でタスクを検索したい =>params[:keyword]
タスクを一覧で表示したい
一覧画面で優先順位、終了期限を元にしてソートしたい
タスクにラベルをつけて分類したい
ユーザ登録し、自分が登録したタスクだけを見られるようにしたい


- User user_name:string email:string password_digest:string admin:boolean
users i(admin) n c s e u d 
- Task task_name:string to_do:string deadline:date status:string priority:string user:references
tasks i n c s e u d
- Lavel label_name:string
lavels n c e u d
- Set_lavel task:references lavel:references
コントローラーなし
- モデルなし
sessions n c d

/スクショ提出
各バージョンを確認するのコマンドをターミナルで実行した結果のスクリーンショット
ruby -v、rails -v、psql --versionのコマンド
rails db:create

rails _5.2.5_ new task_app -d postgresql
cd task_app/
rails db:create =>screenshot
ruby -v
rails -v
psql --version

step4
✅ユーザモデルを作成する
✅最初のユーザをseedで作成する
✅ユーザとタスクを紐づける
✅タスク一覧画面とマイページに表示されているすべてのタスクに、作成したユーザ名を表示させること
✅ユーザのemailにユニーク制約をつける
✅関連（アソシエーションで使用するid）に対してインデックスをつける
✅bcrypt-ruby以外は、Gemを使わずに実装する
✅ログイン機能を実装する
✅ログインをせずにタスク一覧のページに飛ぼうとしたときは、ログインページに遷移させる
✅自分が作成したタスクだけを表示させる
✅ログアウト機能を実装する
✅ユーザの新規登録画面、ログイン画面、詳細・マイページ（show）画面を作成する
✅ユーザを新規登録（create）をしたとき、同時にログインもさせる
✅ログインしているときは、ユーザの新規登録画面（new画面）に行かせないようにコントローラで制御する
✅自分（current_user）以外のユーザのマイページ（userのshow画面）にアクセスしたらタスク一覧に遷移させる
✅管理画面を追加する
✅管理画面にはかならず /admin というURLを先頭につける
管理画面でユーザ一覧表示・作成・更新・削除ができる（管理画面のビューは、パーシャル化しなくても構わない）
✅ユーザを削除したら、そのユーザに紐づいているタスクを全て削除する
✅ユーザの一覧画面で、そのユーザに紐づいているタスクの数を表示する
N+1問題を回避するための仕組みを取り入れること
✅ユーザが作成したタスクの一覧を、そのユーザのマイページ（userのshow画面）で見られる
✅ユーザを管理ユーザと一般ユーザを区別する
✅管理ユーザだけがユーザ管理画面にアクセスできる
✅一般ユーザが管理画面にアクセスしたとき、tasks/indexに飛ばして「管理者以外はアクセスできない」旨のflashメッセージを出力する
✅ユーザ管理画面でロールの付与と削除ができる
✅管理ユーザが一人もいなくなってしまわないように、モデルのコールバックを利用して更新・削除の制御をする
テスト項目を満たすようSystem Specを書く
  ユーザ登録のテスト
    ユーザの新規登録ができること
    ユーザがログインせずタスク一覧画面に飛ぼうとしたとき、ログイン画面に遷移すること
  セッション機能のテスト
    ログインができること
    自分の詳細画面(マイページ)に飛べること
    一般ユーザが他人の詳細画面に飛ぶとタスク一覧画面に遷移すること
    ログアウトができること
  管理画面のテスト
    管理ユーザは管理画面にアクセスできること
    一般ユーザは管理画面にアクセスできないこと
    管理ユーザはユーザの新規登録ができること
    管理ユーザはユーザの詳細画面にアクセスできること
    管理ユーザはユーザの編集画面からユーザを編集できること
    管理ユーザはユーザの削除をできること
ブランチのstep4をherokuにデプロイすること
Herokuにデプロイした際に、すでに登録されているタスクとユーザが紐づいているようにすること

管理画面からuser新規登録ができない
N+1問題の変化がわからない
管理者権限与えるためにそのユーザーのパスワードが必要なのは変？

marcia@example.io

User.create(user_name: "モエカータ", email: "moeka@example.io", password:"password", password_confirmation:"password",admin: true)
